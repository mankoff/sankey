
#+PROPERTY: header-args:bash+ :session *sankey-shell*
#+PROPERTY: header-args:jupyter-python+ :dir (file-name-directory buffer-file-name) :session foo

* On Ice Sheet Mass Flow

* Table of contents                               :toc_3:noexport:
- [[#on-ice-sheet-mass-flow][On Ice Sheet Mass Flow]]
- [[#introduction][Introduction]]
- [[#abstract--methods][Abstract & Methods]]
- [[#results][Results]]
- [[#implementation][Implementation]]
  - [[#greenland][Greenland]]
    - [[#reset][Reset]]
    - [[#basal-melt][Basal melt]]
    - [[#gz-retreat][GZ retreat]]
    - [[#smb][SMB]]
  - [[#antarctica][Antarctica]]
    - [[#reset-1][Reset]]
  - [[#east-v-west-antarctica][East v. West Antarctica]]
  - [[#basal-melt-1][Basal melt]]
  - [[#antarctic-ice-shelves][Antarctic Ice shelves]]
    - [[#frontal-retreat-from-greene-2022][Frontal Retreat from Greene 2022]]
  - [[#smb-mar][SMB (MAR)]]
    - [[#provenance][Provenance]]
    - [[#antarctica-1][Antarctica]]
- [[#misc][Misc]]
  - [[#export-tables-to-csvs][Export tables to CSVs]]
  - [[#convert-pdfs-to-png][Convert PDFs to PNG]]

* Introduction

Sankey diagrams for mass flow in Greenland and Antarctica.

* Abstract & Methods

See [[./ms.tex]]

* Results

#+BEGIN_QUOTE
[!NOTE]  
All figures are width-proportional within and between each other.
#+END_QUOTE

#+CALL: pdfs2png()

#+ATTR_ORG: :width 800px
[[./fig.png]]

* Implementation

** Greenland

#+NAME: gl_baseline
| Code   | Term                     | Value | I/O |    Period | Source          | Comment                     |
|--------+--------------------------+-------+-----+-----------+-----------------+-----------------------------|
| RF     | Rainfall                 |    45 | I   | 2000-2019 | fettweis_2020   |                             |
| CD     | Condensation             |     5 | I   |           |                 | guesstimate                 |
| DP     | Deposition               |    10 | I   |           |                 | guesstimate                 |
| SF     | Snowfall                 |   700 | I   | 2000-2019 | fettweis_2019   |                             |
| RFZ    | Refreezing               |   200 | IO  | 2000-2019 | fettweis_2020   | RFZ = ME + RF - RU          |
| EV     | Evaporation              |    10 | O   |           |                 | guesstimate                 |
| RU     | Runoff                   |   450 | O   | 2000-2019 | fettweis_2020   |                             |
| BM     | Basal melting            |    20 | O   |    steady | karlsson_2020   |                             |
| DYN    | Discharge                |   500 | -   | 2000-2019 | mankoff_2020    | Submarine melting + calving |
| SUB    | Submarine melting        |   250 | O   |           | enderlin_2013   | 50 % of discharge           |
| ICE    | Calving                  |   250 | O   |           | enderlin_2013   | 50 % of discharge           |
| GZRET  | Grounding line retreat ? |     5 | O   |           | See methods     | guesstimate                 |
| FRLOSS | Frontal retreat          |    50 | O   | 2000-2020 | kochtitzky_2023 |                             |
| FRGAIN | Frontal advance          |     0 | O   |           |                 | None in GL                  |
| SU     | Sublimation              |    65 | O   | 2000-2019 | fettweis_2020   |                             |
| DD     | Drawdown                 |       | -   |           | Derived         | sum(O) - sum(I)             |
| MG     | Mass gain                |       | -   |           | Derived         | sum(I) - sum(O)             |
#+CAPTION: Greenland mass flow terms, values, and metadata

#+CALL: orgtbl2csv(tbl="gl_baseline")

#+RESULTS:
: Exported gl_baseline to ./dat/gl_baseline.csv

*** Reset
#+BEGIN_SRC bash :exports both :results verbatim
trash G_GL
[[ -e ./G_GL ]] || grass -e -c EPSG:3413 ./G_GL
#+END_SRC

*** Basal melt

+ 21 Gt/yr from Karlsson (2021) http://doi.org/10.1038/s41467-021-23739-z
+ Assume steady state

*** TODO GZ retreat

From Millan (2022) http://doi.org/10.5194/tc-16-3021-2022
+ Gz retreat is ~0.13 km/yr (Fig. 3a)
+ Ice velocity is ~1200 m/yr (Fig. 3b) (not needed)
+ 20 km wide

Rates are higher per Ciraci (2023) http://doi.org/10.1073/pnas.2220924120, but
+ Ice surface close to flotation near GZ, and shelf is ~500 m thick, so estimate 600 m ice.

Therefore, gz retreat in Gt/year is width * thick * retreat rate * density

#+BEGIN_SRC bash :exports both :results verbatim
frink "0.13 km/yr * 20 km * 600 m * 917 kg/m^3 -> Gt/yr"
#+END_SRC

#+RESULTS:
: 1.43052

Assume similar from other ice shelves too, for a total of ~5 Gt/yr GZ retreat in Greenland.
  
*** SMB

#+BEGIN_SRC bash :exports both :results verbatim
g.mapset -c MAR

ncdump -v TIME dat/MARv3.12-GRD-15km-annual.nc4 # 20-39 = 2000-2019
ncra --overwrite -d TIME,20,39 dat/MARv3.12-GRD-15km-annual.nc4 tmp/MAR_GL.nc

ncdump -v X10_110 tmp/MAR_GL.nc # 101
ncdump -v Y20_200 tmp/MAR_GL.nc # 181
g.region w=$(( -645000 - 7500 )) e=$(( 855000 + 7500 )) s=$(( -3357928 - 7500 )) n=$((-657928 + 7500 )) res=15000 -p

var=SF # debug
for var in SF RF RU SU ME SMB EVA CON DEP SUB MSK; do
  r.in.gdal -o input=NetCDF:tmp/MAR_GL.nc:${var} output=${var}
  r.region -c map=${var}
done
r.mapcalc "AREA = 15*15" # approx cell area b/c not provided with data


r.mapcalc "GL_ice_all = (MSK > 50) & ((x()-y()) > 520000)"
r.clump input=GL_ice output=clumps --o
main_clump=$(r.stats -c -n clumps sort=desc | head -n2 | tail -n1 | cut -d" " -f1)
r.mapcalc "GL_ice = if(clumps == ${main_clump}, 1, null())"
r.mask raster=GL_ice --o

# scale
## units are mm.w.eq. per grid cell. Grid cell areas are in km^2
## + mm.w.eq. -> m w.eq.: /1E3
## + m w.eq -> kg: *1E3
## + area in km^2 -> m^2: *1E3*1E3
## + kg -> Gt: /1E12
# ds = ds/1E3 * 1E3 * ds['AREA']*1E3*1E3 / 1E12
for var in SF RF RU SU ME SMB EVA CON DEP SUB; do
  r.mapcalc "${var} = (${var}/1000) * 1000 * (AREA * 1000*1000) / exp(10,12)"
done
r.mask -r

r.mapcalc "RFZ = ME + RF - RU"
#+END_SRC

#+BEGIN_SRC bash :exports both :results verbatim
for var in SF RF RU ME SMB EVA CON DEP SUB RFZ; do
  echo ${var} $(r.univar -g ${var} | grep sum)
done
#+END_SRC

#+RESULTS:
#+begin_example
SF sum=696.615813562499
RF sum=46.8772385625001
RU sum=447.0171060375
ME sum=597.838173187501
SMB sum=239.736101175
EVA sum=7.97627103749998
CON sum=2.21466825
DEP sum=12.1459762125
SUB sum=62.38499715
RFZ sum=197.6983057125
#+end_example

** Antarctica

#+NAME: third_party
| Code | Term                 | Value | I/O |    Period | Source              | Comment               |
|------+----------------------+-------+-----+-----------+---------------------+-----------------------|
| SMB  | Surface mass balance |  2021 | IO  | 1979-2008 | rignot_2019 table 1 | 2098AQ-77Islands=2021 |
| SMB  | Surface mass balance |  2590 | IO  | 2000-2019 | fettweis_2020       | WITH shelves          |
| DYN  | Discharge            |  2229 | O   | 2009-2017 | rignot_2019 table 1 | 2306-77               |
| DD   | Drawdown             |   208 | -   |           | Derived             | .= sum(O) - sum(I)    |

#+NAME: aq_baseline
| Code   | Term                     |              Value | I/O | Period    | Source               | Comment                           |
|--------+--------------------------+--------------------+-----+-----------+----------------------+-----------------------------------|
| RF     | Rainfall                 |                  5 | I   | 2000-2019 | fettweis_2020        |                                   |
| CD     | Condensation             |                  1 | I   |           |                      |                                   |
| DP     | Deposition               |                  1 | I   |           |                      |                                   |
| SF     | Snowfall                 |               2750 | I   |           | fettweis_2020        |                                   |
| RFZ    | Refreezing               |                105 | IO  |           | fettweis_2020        |                                   |
| EV     | Evaporation              |                  1 | O   |           |                      |                                   |
| RU     | Runoff                   |                 10 | O   |           | fettweis_2020        |                                   |
| BM     | Basal melting            |                 70 | O   | -         | van-liefferinge_2013 |                                   |
| DYN    | Discharge                | 1090 + 1545 = 2635 | -   |           |                      |                                   |
| SUB    | Submarine melting        |               1090 | O   |           | davison_2023         |                                   |
| ICE    | Calving                  |               1545 | O   |           | davison_2023         |                                   |
| GZRET  | Grounding line retreat ? |                  1 | O   |           |                      | 45 in Amundsen from Davison email |
| FRLOSS | Frontal retreat          |       79+122+145-1 | O   |           | greene_2022          |                                   |
| FRGAIN | Frontal advance          |          181+1+103 | O   |           | greene_2022          |                                   |
| SU     | Sublimation              |                160 | O   |           | fettweis_2020        |                                   |
| DD     | Drawdown                 |                    | -   |           | Derived              | .= sum(O) - sum(I)                |
| MG     | Mass gain                |                    | -   |           | Derived              | .= sum(I) - sum(O)                |
#+CAPTION: Antarctic mass flow terms, values, and metadata


*** Reset

#+BEGIN_SRC bash :exports both :results verbatim
trash G_AQ
[[ -e ./G_AQ ]] || grass -e -c EPSG:3031 ./G_AQ
#+END_SRC

** East v. West Antarctica

#+BEGIN_SRC bash :exports both :results verbatim
grass ./G_AQ/PERMANENT

v.in.ogr input=${DATADIR}/NSIDC/NSIDC-0709.002/1992.02.07/IceBoundaries_Antarctica_v02.shp output=basins

g.region vector=basins res=10000 -pas

v.db.select map=basins|head
v.db.select -c map=basins columns=Regions | sort | uniq # East West Peninsula Islands
v.db.select -c map=basins columns=TYPE | sort | uniq # FL GR IS (float, ground, island)

v.to.rast input=basins output=east_GR use=val val=1 where='((Regions == "East") AND (TYPE == "GR"))'
v.to.rast input=basins output=east_FL use=val val=11 where='((Regions == "East") AND (TYPE == "FL"))'
v.to.rast input=basins output=west_GR use=val val=2 where='((Regions == "West") AND (TYPE == "GR"))'
v.to.rast input=basins output=west_FL use=val val=12 where='((Regions == "West") AND (TYPE == "FL"))'
v.to.rast input=basins output=peninsula_GR use=val val=3 where='((Regions == "Peninsula") AND (TYPE == "GR"))'
v.to.rast input=basins output=peninsula_FL use=val val=13 where='((Regions == "Peninsula") AND (TYPE == "FL"))'
v.to.rast input=basins output=islands use=val val=4 where='(TYPE == "IS")'
r.patch input=east_GR,east_FL,west_GR,west_FL,peninsula_GR,peninsula_FL,islands output=basins
r.category basins separator=":" rules=- << EOF
1:East (Grounded)
11:East (Floating)       
2:West (Grounded)
12:West (Floating)
3:Peninsula (Grounded)
13:Peninsula (Floating)
4:Islands	     
EOF

r.colors map=basins color=viridis
#+END_SRC

** Basal melt

Van Liefferinge (2013) http://doi.org/10.5194/cp-9-2335-2013 

Convert MAT file to XYZ for importing into GRASS

#+BEGIN_SRC jupyter-python :exports both
import scipy as sp
import numpy as np
import pandas as pd

mat = sp.io.loadmat('/home/kdm/data/Van_Liefferinge_2023/Melt_Mean_Std_15exp.mat')
X = mat['X'].flatten() * 1E3 # convert from km to m
Y = mat['Y'].flatten() * 1E3
m = mat['MeanMelt'].flatten() / 10 # cm to mm

melt = pd.DataFrame(np.array([X,Y,m]).T, columns=['x','y','melt'])\
         .dropna()
melt.to_csv('./tmp/melt.csv', header=False, index=False)
melt.head()
#+END_SRC

#+RESULTS:
|        |         x |          y |        melt |
|--------+-----------+------------+-------------|
| 148741 | 1.045e+06 | -2.14e+06  | 1e-09       |
| 149859 | 1.03e+06  | -2.135e+06 | 0.00146608  |
| 149860 | 1.035e+06 | -2.135e+06 | 0.000266042 |
| 149861 | 1.04e+06  | -2.135e+06 | 1e-09       |
| 149862 | 1.045e+06 | -2.135e+06 | 0.00045698  |

#+BEGIN_SRC bash :exports both :results verbatim
grass ./G_AQ/PERMANENT
g.mapset -c liefferinge_2023
r.in.xyz input=./tmp/melt.csv output=melt sep=, --o
#+END_SRC

#+BEGIN_SRC bash :exports both :results verbatim
echo "All: " $(r.univar -g map=melt | grep sum)
echo ""
r.univar -gt map=melt zones=basins | cut -d"|" -f2,13 | column -s"|" -t
#+END_SRC

#+RESULTS:
#+begin_example
All:  sum=69.3982306335468

label                 sum
East (Grounded)       45.7178033424208
West (Grounded)       18.0714170862276
Peninsula (Grounded)  2.93302497694997
Islands               0.279139711405429
East (Floating)       1.03624592705523
West (Floating)       0.781445329564939
Peninsula (Floating)  0.254017664974735
#+end_example

** Antarctic Ice shelves

**** Submarine melt

+ Davison (2023) http://doi.org/10.1126/sciadv.adi0186 

#+BEGIN_SRC jupyter-python :exports both
import pandas as pd

fname = '~/data/Davison_2023/adi0186_table_s2.xlsx'

loc = pd.read_excel(fname, sheet_name='Total mass changes', index_col = 0, usecols = 'B,C,D', skiprows = 4)
loc = loc.drop('Antarctic Ice Shelves')


df = pd.read_excel(fname, sheet_name='Melt',
                   index_col = 1, skiprows = 3)

# drop uncertainty columns
unc = []
for c in df.columns:
     if type(c) == str:
          if c[0:8] == 'Unnamed:':
               unc.append(c)
df = df.drop(columns = unc)
df = df[df.columns[3:]]
df = df.iloc[1:]

df = pd.DataFrame(df.mean(axis='columns'))
df.columns = ['Mass']

df = loc.join(df)

import geopandas as gpd
fname = '~/data/NSIDC/NSIDC-0709.002/1992.02.07/IceBoundaries_Antarctica_v02.shp'
ew = gpd.read_file(fname)

df = gpd.GeoDataFrame(df, geometry=gpd.points_from_xy(df['longitude'],df['latitude']), crs="EPSG:4326")
df = df.to_crs('epsg:3031')
e = ew.to_crs('epsg:3031')

idx = ew.sindex.nearest(df['geometry'], return_all=False)
df['Region'] = ''
for dfidx,ewidx in idx.T:
    arr = df.iloc[dfidx].copy(deep=True)
    arr['Region'] = ew.iloc[ewidx]['Regions']
    df.iloc[dfidx] = arr
df = df.drop(columns=['latitude','longitude'])
    
df.loc['Total'] = [df['Mass'].sum(), None, 'All']

df[['Mass','Region']].groupby('Region').sum().drop('Islands').round()
#+END_SRC

#+RESULTS:
:RESULTS:
: /tmp/ipykernel_1220053/4002790239.py:43: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
:   df.loc['Total'] = [df['Mass'].sum(), None, 'All']
| Region    |     Mass |
|-----------+----------|
| All       | 1087.2   |
| East      |  321.123 |
| Peninsula |  172.74  |
| West      |  593.128 |
:END:




**** Calving

Same as above, different sheet. Reuses variables from above, run that first.

#+BEGIN_SRC jupyter-python :exports both
fname = '~/data/Davison_2023/adi0186_table_s2.xlsx'
df = pd.read_excel(fname, sheet_name='Calving',
                   index_col = 1, skiprows = 3)

# drop uncertainty columns
unc = []
for c in df.columns:
     if type(c) == str:
          if c[0:8] == 'Unnamed:':
               unc.append(c)
df = df.drop(columns = unc)
df = df[df.columns[3:]]
df = df.iloc[1:]

df = pd.DataFrame(df.mean(axis='columns'))
df.columns = ['Mass']

df = loc.join(df)

df = gpd.GeoDataFrame(df, geometry=gpd.points_from_xy(df['longitude'],df['latitude']), crs="EPSG:4326")
df = df.to_crs('epsg:3031')
e = ew.to_crs('epsg:3031')

idx = ew.sindex.nearest(df['geometry'], return_all=False)
df['Region'] = ''
for dfidx,ewidx in idx.T:
    arr = df.iloc[dfidx].copy(deep=True)
    arr['Region'] = ew.iloc[ewidx]['Regions']
    df.iloc[dfidx] = arr
df = df.drop(columns=['latitude','longitude'])
    
df.loc['Total'] = [df['Mass'].sum(), None, 'All']

df[['Mass','Region']].groupby('Region').sum().drop('Islands').round()
#+END_SRC

#+RESULTS:
:RESULTS:
: /tmp/ipykernel_1220053/519284814.py:32: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
:   df.loc['Total'] = [df['Mass'].sum(), None, 'All']
| Region    |     Mass |
|-----------+----------|
| All       | 1543.55  |
| East      |  560.3   |
| Peninsula |  236.416 |
| West      |  745.595 |
:END:




**** GZ retreat

Email from Davison

| Ice Shelf   | Mass change due to grounding line migration from 1997 to 2021 (Gt) | Error (Gt) |
| Pine Island |                                                                220 |         40 |
| Thwaites    |                                                                230 |         25 |
| Crosson     |                                                                200 |         25 |
| Dotson      |                                                                420 |         80 |

(220+230+200+420)/(2021-1997) = 44.5833333333


*** Frontal Retreat from Greene 2022

#+BEGIN_QUOTE
[greene_Supplementary_Table_1.xlsx](https://github.com/user-attachments/files/15598602/greene_Supplementary_Table_1.xlsx)

I think the data in the attached spreadsheet from [Greene et al., 2022 ](https://doi.org/10.1038/s41586-022-05037-w) is everything needed for ice-shelf mass-change resulting from frontal advance/retreat, so in Excel `=BI189-O189` gives Antarctica's net retreat from 1997 to 2021. Change the column to adjust the time period.
#+END_QUOTE

BI189 = 24596304.0
BI189 = 2021.2
Q189 = 24597630.0
Q189 = 2000.2

(24596304.0 - 24597630.0) / (2021.2-2000.2) = -63.1428571429

But we need to recreate this in code so we can split by east/west/peninsula

#+BEGIN_SRC jupyter-python :exports both
import pandas as pd
import geopandas as gpd
fname = "~/data/Greene_2022/data/greene_Supplementary_Table_1.xlsx"

df = pd.read_excel(fname, sheet_name='greene_iceshelf_area_and_mass',
                    index_col = 1, skiprows = 4)
df = df.rename(columns={'Unnamed: 2':'lat',
                        'Unnamed: 3':'lon'})

# drop uncertainty columns
unc = []
for c in df.columns:
    if type(c) == str:
        if c[0:8] == 'Unnamed:':
            unc.append(c)
df = df.drop(columns = unc)
df = df[['lat','lon',2000.2,2021.2]]
df = df.iloc[1:]

# Remove last two rows
aq = df.loc['Antarctica']
other = df.loc['Other']
df = df.iloc[:-2]
#+END_SRC

#+RESULTS:

#+BEGIN_SRC jupyter-python :exports both
print(df.sum())
print("")
print(aq)
print("")
print(other)
#+END_SRC

#+RESULTS:
#+begin_example
lat       -12882.373098
lon         6279.268331
2000.2    682491.281291
2021.2    681213.775349
dtype: object

lat            -90
lon          every
2000.2    24597630
2021.2    24596304
Name: Antarctica, dtype: object

lat            NaN
lon            NaN
2000.2    23915136
2021.2    23915090
Name: Other, dtype: object
#+end_example

#+BEGIN_SRC jupyter-python :exports both
shelf = df.sum()
print("All AQ loss: ", (aq[2021.2] - aq[2000.2]) / (2021-2000))
print("Named shelf loss: ", (shelf[2021.2] - shelf[2000.2]) / (2021-2000))
print("Other loss: ", (other[2021.2] - other[2000.2]) / (2021-2000))
print("Named + Other: ", (((other + shelf)[2021.2] - (other + shelf)[2000.2]) / (2021-2000)))
print("Named %: ", 2.19/63.02*100)
#+END_SRC

#+RESULTS:
: All AQ loss:  -63.142857142857146
: Named shelf loss:  -60.83361628651619
: Other loss:  -2.1904761904761907
: Named + Other:  -63.02409247699238
: Named %:  3.4750872738813077

#+BEGIN_SRC jupyter-python :exports both
import geopandas as gpd
fname = '~/data/NSIDC/NSIDC-0709.002/1992.02.07/IceBoundaries_Antarctica_v02.shp'
ew = gpd.read_file(fname)
ew.drop(columns=['geometry']).head()
#+END_SRC

#+RESULTS:
|    | NAME           | Regions   | Subregions   | TYPE   | Asso_Shelf     |
|----+----------------+-----------+--------------+--------+----------------|
|  0 | LarsenE        | Peninsula | Ipp-J        | GR     | LarsenE        |
|  1 | Dawson_Lambton | East      | nan          | FL     | nan            |
|  2 | Academy        | East      | Jpp-K        | GR     | Filchner       |
|  3 | Brunt_Stancomb | East      | K-A          | GR     | Brunt_Stancomb |
|  4 | Riiser-Larsen  | East      | K-A          | GR     | Riiser-Larsen  |

#+BEGIN_SRC jupyter-python :exports both
gdf = gpd.GeoDataFrame(df, geometry=gpd.points_from_xy(df['lon'],df['lat']), crs="EPSG:4326")

gdf = gdf.to_crs('epsg:3031')
ew = ew.to_crs('epsg:3031')

idx = ew.sindex.nearest(gdf['geometry'], return_all=False)
gdf['Region'] = ''
for gdfidx,ewidx in idx.T:
     arr = gdf.iloc[gdfidx].copy(deep=True)
     arr['Region'] = ew.iloc[ewidx]['Regions']
     gdf.iloc[gdfidx] = arr

gdf.head()

gdf.loc['Total'] = gdf.sum(axis='rows')
gdf.loc['Total', 'Region'] = 'All'

gdf['frontal change'] = (gdf[2021.2] - gdf[2000.2]) / (2021.2-2000.2)
pos = gdf[gdf['frontal change'] > 0]
neg = gdf[gdf['frontal change'] <= 0]
# gdf

print('neg', neg[['Region','frontal change']].groupby('Region').sum().round().abs())
print('')
print('pos', pos[['Region','frontal change']].groupby('Region').sum().round().abs())
print('')
print('all', gdf[['Region','frontal change']].groupby('Region').sum().round().abs())
#+END_SRC

#+RESULTS:
#+begin_example
neg            frontal change
Region                   
All                  61.0
East                 79.0
Peninsula           122.0
West                145.0

pos            frontal change
Region                   
East                181.0
Peninsula             1.0
West                103.0

all            frontal change
Region                   
All                  61.0
East                102.0
Peninsula           121.0
West                 42.0
#+end_example

** SMB (MAR)
*** Provenance

#+BEGIN_SRC bash :exports both :results verbatim
mkdir -p dat
pushd dat
wget http://phypc15.geo.ulg.ac.be/fettweis/tmp/ken/MARv3.12-ANT.nc4
wget http://phypc15.geo.ulg.ac.be/fettweis/tmp/ken/MARv3.12-GRD.nc4
popd
#+END_SRC

+ MB ~ SF+RF-RU-SU.
+ Refreezing ~ ME+RF-RU
+ For the uncertainty, you can use 15%.

*** Antarctica

**** Export E/W/P mask on the MAR grid

#+BEGIN_SRC bash :exports both :results verbatim
grass -c ./G_AQ/MAR

fname=dat/MARv3.12-ANT.nc4
r.in.gdal -o input="NetCDF:${fname}:MSK" output=MSK
ncdump -v X ${fname}
ncdump -v Y ${fname}
g.region rows=148 cols=176 w=-3010000 e=3115000 s=-2555000 n=2590000 -p
g.region e=e+17500 w=w-17500 s=s-17500 n=n+17500 rows=148 cols=176 -p
r.region -c map=MSK

r.out.gdal -c -m input=basins@PERMANENT output=./tmp/basins.tif format=GTiff type=Int16 createopt="COMPRESS=DEFLATE"
#+END_SRC

**** Report RCM values

#+BEGIN_SRC jupyter-python :exports both
import xarray as xr
import rioxarray as rxr
import rasterio as rio
import rasterio.plot
import geopandas as gpd
import shapely
import matplotlib.pyplot as plt

ds = xr.open_dataset('./dat/MARv3.12-ANT.nc4')\
    .rename({'TIME2':'time'})

ds = ds.rio.write_crs('EPSG:3031')

# east vs west (see GRASS code above)
basins = rio.open('tmp/basins.tif').read().squeeze()
ds['basins'] = (('Y','X'), basins[::-1,:])

# Mask to ice
ds = ds.where(ds['MSK'] > 50)
ds = ds.sel({'time':slice(2000,2019)})
ds = ds.where(ds['basins'] > 0)
ds = ds.mean(dim='time')

# Add new terms and limit to terms of interest
ds['RFZ'] = ds['ME'] + ds['RF'] - ds['RU']
ds['SMB'] = ds['SF'] + ds['RF'] - ds['RU'] - ds['SU']
ds2 = ds[['SF','RF','RU','SU','ME','RFZ','SMB']]

# scale
## units are mm.w.eq. per grid cell. Grid cell areas are in km^2
## + mm.w.eq. -> m w.eq.: /1E3
## + m w.eq -> kg: *1E3
## + area in km^2 -> m^2: *1E3*1E3
## + kg -> Gt: /1E12
ds2 = (ds2 / 1E3) * 1E3 * ds['AREA']*1E3*1E3 / 1E12

print("All:")
print(ds2.sum().round().astype(int))

print("\nEast:")
print(ds2.where(ds['basins'] == 1).sum().round().astype(int))

print("\nWest:")
print(ds2.where(ds['basins'] == 2).sum().round().astype(int))

print("\nPeninsula:")
print(ds2.where(ds['basins'] == 3).sum().round().astype(int))
#+END_SRC

#+RESULTS:
#+begin_example
All:
<xarray.Dataset> Size: 64B
Dimensions:      ()
Coordinates:
    spatial_ref  int64 8B 0
Data variables:
    SF           int64 8B 2751
    RF           int64 8B 6
    RU           int64 8B 9
    SU           int64 8B 157
    ME           int64 8B 107
    RFZ          int64 8B 104
    SMB          int64 8B 2591

East:
<xarray.Dataset> Size: 64B
Dimensions:      ()
Coordinates:
    spatial_ref  int64 8B 0
Data variables:
    SF           int64 8B 1555
    RF           int64 8B 1
    RU           int64 8B 3
    SU           int64 8B 133
    ME           int64 8B 42
    RFZ          int64 8B 40
    SMB          int64 8B 1420

West:
<xarray.Dataset> Size: 64B
Dimensions:      ()
Coordinates:
    spatial_ref  int64 8B 0
Data variables:
    SF           int64 8B 869
    RF           int64 8B 1
    RU           int64 8B 0
    SU           int64 8B 13
    ME           int64 8B 14
    RFZ          int64 8B 14
    SMB          int64 8B 857

Peninsula:
<xarray.Dataset> Size: 64B
Dimensions:      ()
Coordinates:
    spatial_ref  int64 8B 0
Data variables:
    SF           int64 8B 327
    RF           int64 8B 4
    RU           int64 8B 6
    SU           int64 8B 11
    ME           int64 8B 52
    RFZ          int64 8B 50
    SMB          int64 8B 315
#+end_example

* Misc
** Export tables to CSVs

#+NAME: orgtbl2csv
#+BEGIN_SRC emacs-lisp :var tbl="" :colnames no
(save-excursion
  (goto-char (point-min))
  (re-search-forward (concat "^#\\+name: " tbl) nil t)
  (next-line)
  (org-table-export (concat "./dat/" tbl ".csv") "orgtbl-to-csv")
  ;;(shell-command-to-string (concat "head " tbl ".csv"))
  (message (concat "Exported " tbl " to " (concat "./dat/" tbl ".csv")))
  )
#+END_SRC

** Convert PDFs to PNG

#+NAME: pdfs2png
#+BEGIN_SRC bash :exports results :results verbatim :results none
convert -density 300 -background white -alpha remove -trim -gravity center -annotate +15-30 'Greenland' gl_baseline.pdf tmp/gl.png

convert -density 300 -background white -alpha remove -trim -gravity center -annotate -5-30 'Antarctica' aq_baseline.pdf tmp/aq.png

convert -density 300 -background white -alpha remove -trim -gravity center -annotate +25-60 'East' aq_east.pdf ./tmp/aqe.png

convert -density 300 -background white -alpha remove -trim -gravity center -annotate -5-30 'West' aq_west.pdf ./tmp/aqw.png

convert -density 300 -background white -alpha remove -trim -gravity center -draw "translate 60,-150 rotate -90 text 0,0 'Peninsula'" aq_peninsula.pdf ./tmp/aqp.png

convert -density 300 -background transparent -alpha remove legend.svg ./tmp/legend.png
composite -gravity center -geometry '100%x100%+300-300' tmp/legend.png tmp/aq.png tmp/aq_legend.png

convert +append tmp/{gl,aq_legend}.png gl_aq.png
convert +append tmp/{aqe,aqw,aqp}.png aq_sub.png
convert -gravity center -append {gl_aq,aq_sub}.png ./fig.png
#+END_SRC
